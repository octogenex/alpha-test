{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\alpha\\\\alpha-test\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport People from './components/People';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      peoples: [{\n        id: 1,\n        name: 'Rooms',\n        currentCount: 1,\n        isDisabled: false\n      }, {\n        id: 2,\n        name: 'Adults',\n        currentCount: 0,\n        isDisabled: false\n      }, {\n        id: 3,\n        name: 'Childs',\n        currentCount: 0,\n        isDisabled: false\n      }]\n    };\n\n    this.decrementCounter = id => {\n      this.setState({\n        peoples: this.state.peoples.map(people => {\n          var aCount = this.state.peoples[1].currentCount;\n          var cCount = this.state.peoples[2].currentCount;\n          var rCount = this.state.peoples[0].currentCount;\n\n          if (people.id === id) {\n            if (people.id === 1) // this is a room\n              {\n                if (people.currentCount > 1) {\n                  people.currentCount -= 1;\n\n                  if (this.state.peoples[2].currentCount > 0) {\n                    var checkParam = aCount + cCount;\n\n                    for (var i = cCount; i > 0; --i) {\n                      this.state.peoples[2].currentCount -= 1;\n                    }\n                  }\n\n                  if (this.state.peoples[2].currentCount == 0 && this.state.peoples[1].currentCount > this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                    console.log(this.state.peoples[1].currentCount);\n                    this.state.peoples[1].currentCount -= this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount);\n                  }\n                }\n              }\n\n            if (people.id === 2) // this is a adults\n              {\n                if (people.currentCount > 1) {\n                  people.currentCount -= 1;\n\n                  if (people.currentCount <= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                    if (!this.fallsInRange(people.currentCount)) {\n                      this.state.peoples[0].currentCount -= 1;\n                    } // console.log(this.state.peoples[0].currentCount)\n                    // // this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount);.\n                    // console.log(this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount),this.state.peoples[0].currentCount)\n\n                  }\n                }\n              }\n\n            if (people.id === 3) // this is a child\n              {\n                if (people.currentCount < 20) {\n                  var ParamCheck = people.currentCount + aCount;\n\n                  if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                    people.currentCount += 1;\n                    this.state.peoples[0].currentCount += 1;\n                  } else if (people.currentCount <= this.checkVal(cCount)) {\n                    people.currentCount += 1;\n                  } else {\n                    people.currentCount += 1;\n                  }\n                }\n              }\n          }\n\n          return people;\n        })\n      });\n    };\n\n    this.increamentCounter = id => {\n      this.setState({\n        peoples: this.state.peoples.map(people => {\n          var aCount = this.state.peoples[1].currentCount;\n          var cCount = this.state.peoples[2].currentCount;\n          var rCount = this.state.peoples[0].currentCount;\n\n          if (people.id === id) {\n            if (people.id === 1) // this is a room\n              {\n                if (people.currentCount < 5) {\n                  people.currentCount += 1;\n                }\n              }\n\n            if (people.id === 2) // this is a adults\n              {\n                if (people.currentCount < 20) {\n                  var ParamCheck = people.currentCount + cCount;\n\n                  if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                    people.currentCount += 1;\n                    this.state.peoples[0].currentCount += 1;\n                  } else if (people.currentCount <= this.checkVal(cCount)) {\n                    people.currentCount += 1;\n                  } else {\n                    people.currentCount += 1;\n                  }\n                }\n              }\n\n            if (people.id === 3) // this is a child\n              {\n                if (people.currentCount < 20) {\n                  var ParamCheck = people.currentCount + aCount;\n\n                  if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                    people.currentCount += 1;\n                    this.state.peoples[0].currentCount += 1;\n                  } else if (people.currentCount <= this.checkVal(cCount)) {\n                    people.currentCount += 1;\n                  } else {\n                    people.currentCount += 1;\n                  }\n                }\n              }\n          }\n\n          return people;\n        })\n      });\n    };\n  }\n\n  checkRoomCapacity(room) {\n    var count = 4;\n\n    for (var i = 1; i <= room; i++) {\n      count = 4;\n      count = count * i;\n    }\n\n    return count;\n  }\n\n  getRoomCapacityOnDecreament(val) {\n    var room = this.state.peoples[0].currentCount;\n\n    if (this.checkRoomCapacity(room) < val) {\n      console.log(\"Decrement calc:\", val - this.checkRoomCapacity(room), val, room);\n      return val - this.checkRoomCapacity(room);\n    } else return val;\n  }\n\n  fallsInRange(val) {\n    for (var i = 0; i < this.state.peoples[0].currentCount; i++) {\n      if (val <= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  checkVal(val) {\n    if (val === 1) {\n      return 4;\n    } else if (val === 2) {\n      return 3;\n    } else if (val === 3) {\n      return 2;\n    } else if (val === 4) {\n      return 1;\n    } else if (val === 0) {\n      return 4;\n    } else if (val >= 4) {\n      return 0;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(People, {\n      peoples: this.state.peoples,\n      decrementCounter: this.decrementCounter,\n      increamentCounter: this.increamentCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/react/alpha/alpha-test/src/App.js"],"names":["React","Component","People","App","state","peoples","id","name","currentCount","isDisabled","decrementCounter","setState","map","people","aCount","cCount","rCount","checkParam","i","checkRoomCapacity","console","log","getRoomCapacityOnDecreament","fallsInRange","ParamCheck","checkVal","increamentCounter","room","count","val","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport People from './components/People';\nclass App extends Component {\n  state =\n    {\n      peoples: [\n        {\n          id: 1,\n          name: 'Rooms',\n          currentCount: 1,\n          isDisabled: false\n        },\n        {\n          id: 2,\n          name: 'Adults',\n          currentCount: 0,\n          isDisabled: false\n        },\n        {\n          id: 3,\n          name: 'Childs',\n          currentCount: 0,\n          isDisabled: false\n        }]\n    };\n  decrementCounter = (id) => {\n    this.setState({\n      peoples: this.state.peoples.map((people) => {\n        var aCount = this.state.peoples[1].currentCount;\n        var cCount = this.state.peoples[2].currentCount;\n        var rCount = this.state.peoples[0].currentCount;\n        if (people.id === id) {\n          if (people.id === 1)// this is a room\n          {\n            if(people.currentCount>1)\n            {\n              people.currentCount-=1;\n                if(this.state.peoples[2].currentCount>0){\n                  var checkParam  = aCount+cCount;\n                  for(var i=cCount;i>0;--i){\n                    this.state.peoples[2].currentCount -= 1;\n                  }\n                }\n                if(this.state.peoples[2].currentCount ==0 && this.state.peoples[1].currentCount >this.checkRoomCapacity(this.state.peoples[0].currentCount))\n                {\n                  console.log(this.state.peoples[1].currentCount);\n                   this.state.peoples[1].currentCount -= this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount);\n              }\n            }\n          }\n          if (people.id === 2)// this is a adults\n          {\n            if (people.currentCount > 1) {\n              people.currentCount-=1;\n              if(people.currentCount <= this.checkRoomCapacity(this.state.peoples[0].currentCount)){\n                if(!this.fallsInRange(people.currentCount)){\n                  this.state.peoples[0].currentCount -= 1;\n                }\n                // console.log(this.state.peoples[0].currentCount)\n                \n                // // this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount);.\n                // console.log(this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount),this.state.peoples[0].currentCount)\n              }\n            }\n          }\n          if (people.id === 3)// this is a child\n          {\n            if (people.currentCount < 20) {\n              var ParamCheck = people.currentCount + aCount;\n              if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount += 1;\n              }\n              else if ((people.currentCount <= this.checkVal(cCount))) {\n                people.currentCount += 1;\n              }\n              else {\n                people.currentCount += 1;\n              }\n            }\n          }\n        }\n        return people;\n      })\n    });\n  };\n  increamentCounter = (id) => {\n    this.setState({\n      peoples: this.state.peoples.map((people) => {\n        var aCount = this.state.peoples[1].currentCount;\n        var cCount = this.state.peoples[2].currentCount;\n        var rCount = this.state.peoples[0].currentCount;\n        if (people.id === id) {\n          if (people.id === 1)// this is a room\n          {\n             if(people.currentCount<5){\n               people.currentCount+=1;\n             }\n          }\n          if (people.id === 2)// this is a adults\n          {\n            if (people.currentCount < 20) {\n              var ParamCheck = people.currentCount + cCount;\n              if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount += 1;\n              }\n              else if ((people.currentCount <= this.checkVal(cCount))) {\n                people.currentCount += 1;\n              }\n              else {\n                people.currentCount += 1;\n              }\n            }\n          }\n          if (people.id === 3)// this is a child\n          {\n            if (people.currentCount < 20) {\n              var ParamCheck = people.currentCount + aCount;\n              if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount += 1;\n              }\n              else if ((people.currentCount <= this.checkVal(cCount))) {\n                people.currentCount += 1;\n              }\n              else {\n                people.currentCount += 1;\n              }\n            }\n          }\n        }\n        return people;\n      })\n    });\n  }\n  checkRoomCapacity(room) {\n    var count = 4;\n    for (var i = 1; i <= room; i++) {\n      count = 4;\n      count = count * i;\n    }\n    return count;\n  }\n  getRoomCapacityOnDecreament(val){\n    var room = this.state.peoples[0].currentCount;\n       if(this.checkRoomCapacity(room)<val){\n         console.log(\"Decrement calc:\",val-this.checkRoomCapacity(room),val,room);\n          return (val - this.checkRoomCapacity(room));\n       }\n       else return val;\n  }\n\n  fallsInRange(val){\n    for(var i=0;i<this.state.peoples[0].currentCount;i++){\n      if(val<=this.checkRoomCapacity(this.state.peoples[0].currentCount)){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n   \n  }\n\n  checkVal(val) {\n    if (val === 1) {\n      return 4;\n    } else if (val === 2) {\n      return 3;\n    } else if (val === 3) {\n      return 2;\n    } else if (val === 4) {\n      return 1;\n    } else if (val === 0) {\n      return 4;\n    } else if (val >= 4) {\n      return 0;\n    }\n  };\n  render() {\n    return (\n      <div className='App'>\n        <div className='container'>\n          <People\n            peoples={this.state.peoples}\n            decrementCounter={this.decrementCounter}\n            increamentCounter={this.increamentCounter}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}