{"ast":null,"code":"var _jsxFileName = \"e:\\\\react\\\\alpha\\\\alpha-test\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport People from './components/People';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      peoples: [{\n        id: 1,\n        name: 'Rooms',\n        currentCount: 1,\n        isDisabled: false\n      }, {\n        id: 2,\n        name: 'Adults',\n        currentCount: 0,\n        isDisabled: false\n      }, {\n        id: 3,\n        name: 'Childs',\n        currentCount: 0,\n        isDisabled: false\n      }]\n    };\n\n    this.decrementCounter = id => {\n      this.setState({\n        peoples: this.state.peoples.map(people => {\n          var aCount = this.state.peoples[1].currentCount;\n          var cCount = this.state.peoples[2].currentCount;\n          var rCount = this.state.peoples[0].currentCount;\n\n          if (people.id === 1) {\n            rCount = people.currentCount;\n          } else if (people.id === 2) {\n            aCount = people.currentCount;\n          } else if (people.id === 3) {\n            cCount = people.currentCount;\n          }\n\n          if (people.id === id) {\n            if (people.id === 1) // this is a room\n              {\n                let acCount = aCount + cCount;\n                console.log(acCount);\n\n                if (people.currentCount <= 1) {\n                  alert(\"Value must be greater than 1!!! \");\n                } else if (acCount > 4) {\n                  console.log(acCount);\n                  people.currentCount = this.checkRoomCapacity(rCount); // people.currentCount = people.currentCount+1;\n                } else if (acCount > 8) {\n                  console.log(acCount);\n                  people.currentCount = this.checkRoomCapacity(acCount); // people.currentCount = people.currentCount+2;\n                } else if (acCount > 12) {\n                  console.log(acCount);\n                  people.currentCount = this.checkRoomCapacity(acCount); // people.currentCount = people.currentCount+3;\n                } else if (acCount > 16) {\n                  console.log(acCount);\n                  people.currentCount = this.checkRoomCapacity(acCount); // people.currentCount = people.currentCount+4;\n                } // else {\n                //   people.currentCount += 1;\n                // }\n\n              }\n\n            if (people.id === 2) // this is a adults\n              {\n                //if (rCount === 1) {\n                var ParamCheck = people.currentCount + cCount;\n\n                if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                  people.currentCount += 1;\n                  this.state.peoples[0].currentCount += 1;\n                } else if (people.currentCount <= this.checkVal(cCount)) {\n                  people.currentCount += 1;\n                } //}\n                else {\n                    people.currentCount += 1;\n                  }\n              }\n\n            if (people.id === 3) // this is a child\n              {\n                //if (rCount === 1) {\n                var ParamCheck = people.currentCount + aCount;\n\n                if (ParamCheck >= 4) {\n                  people.currentCount += 1;\n                  this.state.peoples[0].currentCount += 1;\n                } else if (people.currentCount <= this.checkVal(aCount) && people.currentCount <= 4) {\n                  people.currentCount += 1;\n                } //}\n                else {\n                    people.currentCount += 1;\n                  }\n              }\n          }\n\n          return people;\n        })\n      });\n    };\n\n    this.increamentCounter = id => {\n      this.setState({\n        peoples: this.state.peoples.map(people => {\n          var aCount = this.state.peoples[1].currentCount;\n          var cCount = this.state.peoples[2].currentCount;\n          var rCount = this.state.peoples[0].currentCount;\n\n          if (people.id === 1) {\n            rCount = people.currentCount;\n          } else if (people.id === 2) {\n            aCount = people.currentCount;\n          } else if (people.id === 3) {\n            cCount = people.currentCount;\n          }\n\n          if (people.id === id) {\n            if (people.id === 1) // this is a room\n              {\n                let acCount = aCount + cCount;\n                console.log(acCount);\n\n                if (people.currentCount >= 5) {\n                  alert(\"Value must be less than 5!!! \");\n                } else if (acCount > 4) {\n                  console.log(acCount);\n                  people.currentCount = this.roomCriteria(acCount); // people.currentCount = people.currentCount+1;\n                } else if (acCount > 8) {\n                  console.log(acCount);\n                  people.currentCount = this.roomCriteria(acCount); // people.currentCount = people.currentCount+2;\n                } else if (acCount > 12) {\n                  console.log(acCount);\n                  people.currentCount = this.roomCriteria(acCount); // people.currentCount = people.currentCount+3;\n                } else if (acCount > 16) {\n                  console.log(acCount);\n                  people.currentCount = this.roomCriteria(acCount); // people.currentCount = people.currentCount+4;\n                } // else {\n                //   people.currentCount += 1;\n                // }\n\n              }\n\n            if (people.id === 2) // this is a adults\n              {\n                //if (rCount === 1) {\n                var ParamCheck = people.currentCount + cCount;\n\n                if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                  people.currentCount += 1;\n                  this.state.peoples[0].currentCount += 1;\n                } else if (people.currentCount <= this.checkVal(cCount)) {\n                  people.currentCount += 1;\n                } //}\n                else {\n                    people.currentCount += 1;\n                  }\n              }\n\n            if (people.id === 3) // this is a child\n              {\n                if (rCount === 1) {\n                  var ParamCheck = people.currentCount + aCount;\n\n                  if (ParamCheck >= 4) {\n                    people.currentCount += 1;\n                    this.state.peoples[0].currentCount += 1;\n                  } else if (people.currentCount <= this.checkVal(aCount) && people.currentCount <= 4) {\n                    people.currentCount += 1;\n                  }\n                } else {\n                  people.currentCount += 1;\n                }\n              }\n          }\n\n          return people;\n        })\n      });\n    };\n  }\n\n  checkVal(val) {\n    if (val === 1) {\n      return 4;\n    } else if (val === 2) {\n      return 3;\n    } else if (val === 3) {\n      return 2;\n    } else if (val === 4) {\n      return 1;\n    } else if (val === 0) {\n      return 4;\n    } else if (val >= 4) {\n      return 0;\n    } // } else return 4;\n\n  }\n\n  checkRoomCapacity(room) {\n    var count = 4;\n\n    for (var i = 1; i <= room; i++) {\n      count = 4;\n      count = count * i;\n    }\n\n    return count;\n  }\n\n  roomCriteria(val) {\n    // var capacity = val;\n    var _room = 1; // if(val<=capacity){\n    //   return capacity\n    // }else if(val>=capacity && val<=(capacity*2)){\n    //   return capacity + 1\n    // }\n    // else return capacity+1;\n\n    if (val === 4) {\n      return _room;\n    } else if (val > 4 && val <= 8) {\n      return _room + 1;\n    } else if (val > 8 && val <= 12) {\n      return _room + 2;\n    } else if (val > 12 && val <= 16) {\n      return _room + 3;\n    } else return _room + 4;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(People, {\n      peoples: this.state.peoples,\n      decrementCounter: this.decrementCounter,\n      increamentCounter: this.increamentCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["e:/react/alpha/alpha-test/src/App.js"],"names":["React","Component","People","App","state","peoples","id","name","currentCount","isDisabled","decrementCounter","setState","map","people","aCount","cCount","rCount","acCount","console","log","alert","checkRoomCapacity","ParamCheck","checkVal","increamentCounter","roomCriteria","val","room","count","i","_room","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport People from './components/People';\nclass App extends Component {\n  state =\n    {\n      peoples: [\n        {\n          id: 1,\n          name: 'Rooms',\n          currentCount: 1,\n          isDisabled: false\n        },\n        {\n          id: 2,\n          name: 'Adults',\n          currentCount: 0,\n          isDisabled: false\n        },\n        {\n          id: 3,\n          name: 'Childs',\n          currentCount: 0,\n          isDisabled: false\n        }]\n    };\n  // Toggle Complete\n  decrementCounter = (id) => {\n    this.setState({\n      peoples: this.state.peoples.map((people) => {\n        var aCount = this.state.peoples[1].currentCount;\n        var cCount = this.state.peoples[2].currentCount;\n        var rCount = this.state.peoples[0].currentCount;\n        if (people.id === 1) {\n          rCount = people.currentCount;\n        }\n        else if (people.id === 2) {\n          aCount = people.currentCount;\n        }\n        else if (people.id === 3) {\n          cCount = people.currentCount;\n        }\n\n        if (people.id === id) {\n          if (people.id === 1)// this is a room\n          {\n            let acCount = aCount+cCount;\n            console.log(acCount);\n            if (people.currentCount <= 1) {\n              alert(\"Value must be greater than 1!!! \");\n            }else if(acCount>4){\n              console.log(acCount);\n\n              people.currentCount = this.checkRoomCapacity(rCount);\n              // people.currentCount = people.currentCount+1;\n              \n            }else if(acCount>8){\n              console.log(acCount);\n              people.currentCount = this.checkRoomCapacity(acCount);\n              // people.currentCount = people.currentCount+2;\n            }else if(acCount>12){\n              console.log(acCount);\n              people.currentCount = this.checkRoomCapacity(acCount);\n              // people.currentCount = people.currentCount+3;\n            }\n            else if(acCount>16){\n              console.log(acCount);\n              people.currentCount = this.checkRoomCapacity(acCount);\n              // people.currentCount = people.currentCount+4;\n            }\n            // else {\n            //   people.currentCount += 1;\n            // }\n          }\n          if (people.id === 2)// this is a adults\n          {\n            //if (rCount === 1) {\n              var ParamCheck = people.currentCount + cCount;\n              if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount +=1; \n              }\n              else if ((people.currentCount <= this.checkVal(cCount)) ) {\n                people.currentCount += 1;\n              }\n            //}\n            else {\n              people.currentCount += 1;\n            }\n          }\n\n          if (people.id === 3)// this is a child\n          {\n            //if (rCount === 1) {\n              var ParamCheck = people.currentCount + aCount;\n              if (ParamCheck >= 4) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount +=1; \n              }\n              else if ((people.currentCount <= this.checkVal(aCount)) && people.currentCount<=4) {\n                people.currentCount += 1;\n              }\n            //}\n            else {\n              people.currentCount += 1;\n            }\n          }\n\n        }\n        return people;\n      })\n  });\n};\n\n  checkVal(val) {\n    if (val === 1) {\n      return 4;\n    } else if (val === 2) {\n      return 3;\n    } else if (val === 3) {\n      return 2;\n    } else if (val === 4) {\n      return 1;\n    } else if (val === 0){\n      return 4;\n    }else if(val>=4){\n      return 0;\n    }\n    // } else return 4;\n  };\n\ncheckRoomCapacity(room){\n  var count = 4;\n  for(var i=1;i<=room;i++){\n    count = 4;\n    count = count*i;\n  }\n  return count;\n  \n}\n\n  roomCriteria(val){\n    // var capacity = val;\n    var _room = 1 ;\n    // if(val<=capacity){\n    //   return capacity\n    // }else if(val>=capacity && val<=(capacity*2)){\n    //   return capacity + 1\n    // }\n    // else return capacity+1;\n    if (val === 4 ){\n      return _room;\n    }else if (val>4 && val <=8){\n      return _room + 1;\n    }else if (val > 8 && val<=12){\n      return _room + 2;\n    }else if (val > 12 && val <=16){\n      return _room + 3;\n    }else return _room + 4;\n  }\n  increamentCounter = (id) => {\n    this.setState({\n      peoples: this.state.peoples.map((people) => {\n        var aCount = this.state.peoples[1].currentCount;\n        var cCount = this.state.peoples[2].currentCount;\n        var rCount = this.state.peoples[0].currentCount;\n        if (people.id === 1) {\n          rCount = people.currentCount;\n        }\n        else if (people.id === 2) {\n          aCount = people.currentCount;\n        }\n        else if (people.id === 3) {\n          cCount = people.currentCount;\n        }\n\n        if (people.id === id) {\n          if (people.id === 1)// this is a room\n          {\n            let acCount = aCount+cCount;\n            console.log(acCount);\n            if (people.currentCount >= 5) {\n              alert(\"Value must be less than 5!!! \");\n            }else if(acCount>4){\n              console.log(acCount);\n              people.currentCount = this.roomCriteria(acCount);\n              // people.currentCount = people.currentCount+1;\n            }else if(acCount>8){\n              console.log(acCount);\n              people.currentCount = this.roomCriteria(acCount);\n              // people.currentCount = people.currentCount+2;\n            }else if(acCount>12){\n              console.log(acCount);\n              people.currentCount = this.roomCriteria(acCount);\n              // people.currentCount = people.currentCount+3;\n            }\n            else if(acCount>16){\n              console.log(acCount);\n              people.currentCount = this.roomCriteria(acCount);\n              // people.currentCount = people.currentCount+4;\n            }\n            // else {\n            //   people.currentCount += 1;\n            // }\n          }\n          if (people.id === 2)// this is a adults\n          {\n            //if (rCount === 1) {\n              var ParamCheck = people.currentCount + cCount;\n              if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount +=1; \n              }\n              else if ((people.currentCount <= this.checkVal(cCount)) ) {\n                people.currentCount += 1;\n              }\n            //}\n            else {\n              people.currentCount += 1;\n            }\n          }\n\n          if (people.id === 3)// this is a child\n          {\n            if (rCount === 1) {\n              var ParamCheck = people.currentCount + aCount;\n              if (ParamCheck >= 4) {\n                people.currentCount += 1;\n                this.state.peoples[0].currentCount +=1; \n              }\n              else if ((people.currentCount <= this.checkVal(aCount)) && people.currentCount<=4) {\n                people.currentCount += 1;\n              }\n            }\n            else {\n              people.currentCount += 1;\n            }\n          }\n\n        }\n        return people;\n      })\n\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <div className='container'>\n\n          <People\n            peoples={this.state.peoples}\n            decrementCounter={this.decrementCounter}\n            increamentCounter={this.increamentCounter}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}