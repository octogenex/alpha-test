{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\alpha\\\\alpha-test\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport People from './components/People';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      peoples: [{\n        id: 1,\n        name: 'Rooms',\n        currentCount: 1,\n        isDisabled: false\n      }, {\n        id: 2,\n        name: 'Adults',\n        currentCount: 0,\n        isDisabled: false\n      }, {\n        id: 3,\n        name: 'Childs',\n        currentCount: 0,\n        isDisabled: false\n      }]\n    };\n\n    this.decrementCounter = id => {\n      this.setState({\n        peoples: this.state.peoples.map(people => {\n          var aCount = this.state.peoples[1].currentCount;\n          var cCount = this.state.peoples[2].currentCount;\n          var rCount = this.state.peoples[0].currentCount;\n\n          if (people.id === id) {\n            if (people.id === 1) // this is a room\n              {\n                if (people.currentCount > 1) {\n                  people.currentCount -= 1;\n\n                  if (this.state.peoples[2].currentCount > 0) {\n                    var checkParam = aCount + cCount;\n\n                    for (var i = cCount; i > 0; --i) {\n                      this.state.peoples[2].currentCount -= 1;\n                    }\n                  }\n\n                  if (this.state.peoples[2].currentCount == 0 && this.state.peoples[1].currentCount > this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                    console.log(this.state.peoples[1].currentCount);\n                    this.state.peoples[1].currentCount -= this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount);\n                  }\n                }\n              }\n\n            if (people.id === 2) // this is a adults\n              {\n                if (people.currentCount > 1) {\n                  people.currentCount -= 1;\n\n                  if (this.fallsInRange(people.currentCount) === false) {\n                    console.log(this.fallsInRange(people.currentCount));\n                    this.state.peoples[0].currentCount -= 1;\n                  }\n                }\n              }\n\n            if (people.id === 3) // this is a child\n              {\n                if (people.currentCount >= 0) {\n                  people.currentCount -= 1;\n\n                  if (this.fallsInRange(people.currentCount) === false) {\n                    console.log(this.fallsInRange(people.currentCount));\n                    this.state.peoples[0].currentCount -= 1;\n                  }\n                }\n              }\n          }\n\n          return people;\n        })\n      });\n    };\n\n    this.increamentCounter = id => {\n      this.setState({\n        peoples: this.state.peoples.map(people => {\n          var aCount = this.state.peoples[1].currentCount;\n          var cCount = this.state.peoples[2].currentCount;\n          var rCount = this.state.peoples[0].currentCount;\n\n          if (people.id === id) {\n            if (people.id === 1) // this is a room\n              {\n                if (people.currentCount < 5) {\n                  people.currentCount += 1;\n                }\n              }\n\n            if (people.id === 2) // this is a adults\n              {\n                if (this.state.peoples[0].currentCount < 5) {\n                  if (people.currentCount < 20) {\n                    var ParamCheck = people.currentCount + cCount;\n\n                    if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                      people.currentCount += 1;\n                      this.state.peoples[0].currentCount += 1;\n                    } else if (people.currentCount <= this.checkVal(cCount)) {\n                      people.currentCount += 1;\n                    } else {\n                      people.currentCount += 1;\n                    }\n                  }\n                }\n              }\n\n            if (people.id === 3) // this is a child\n              {\n                if (this.state.peoples[0].currentCount < 5) {\n                  if (people.currentCount < 20) {\n                    var ParamCheck = people.currentCount + aCount;\n\n                    if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                      people.currentCount += 1;\n                      this.state.peoples[0].currentCount += 1;\n                    } else if (people.currentCount <= this.checkVal(cCount)) {\n                      people.currentCount += 1;\n                    } else {\n                      people.currentCount += 1;\n                    }\n                  }\n                }\n              }\n          }\n\n          return people;\n        })\n      });\n    };\n  }\n\n  checkRoomCapacity(room) {\n    var min = 1;\n    var max = 4;\n    var count = max;\n\n    for (var i = min; i <= room; i++) {\n      count = 4;\n      count = count * i;\n    }\n\n    return count;\n  }\n\n  getMinRoomCap(room) {\n    var min = 1;\n    var max = 4;\n    var roomMax = max * room;\n    var roomMin = roomMax - max;\n    return roomMin;\n  }\n\n  getMaxRoomCap(room) {\n    var min = 1;\n    var max = 4;\n    var roomMax = max * room;\n    var roomMin = roomMax - max;\n    return roomMax;\n  }\n\n  getRoomCapacityOnDecreament(val) {\n    var room = this.state.peoples[0].currentCount;\n\n    if (this.checkRoomCapacity(room) < val) {\n      console.log(\"Decrement calc:\", val - this.checkRoomCapacity(room), val, room);\n      return val - this.checkRoomCapacity(room);\n    } else return val;\n  }\n\n  fallsInRange(val) {\n    //for(var i=0;i<this.state.peoples[0].currentCount;i++){\n    // var isRange = true;\n    console.log(this.getMinRoomCap(this.state.peoples[0].currentCount), this.getMaxRoomCap(this.state.peoples[0].currentCount));\n\n    if (this.getMinRoomCap(this.state.peoples[0].currentCount) <= val && this.getMaxRoomCap(this.state.peoples[0].currentCount) >= val) {\n      //  if(val<4){\n      return false;\n    } else {\n      return true;\n    }\n  } //   if(val<=this.checkRoom(this.state.peoples[0].currentCount)){\n  //     console.log(val);\n  //     return true;\n  //   }\n  //  else{\n  //    return false;\n  //  }\n  // return isRange;\n  //}\n\n\n  checkVal(val) {\n    if (val === 1) {\n      return 4;\n    } else if (val === 2) {\n      return 3;\n    } else if (val === 3) {\n      return 2;\n    } else if (val === 4) {\n      return 1;\n    } else if (val === 0) {\n      return 4;\n    } else if (val >= 4) {\n      return 0;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(People, {\n      peoples: this.state.peoples,\n      decrementCounter: this.decrementCounter,\n      increamentCounter: this.increamentCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/react/alpha/alpha-test/src/App.js"],"names":["React","Component","People","App","state","peoples","id","name","currentCount","isDisabled","decrementCounter","setState","map","people","aCount","cCount","rCount","checkParam","i","checkRoomCapacity","console","log","getRoomCapacityOnDecreament","fallsInRange","increamentCounter","ParamCheck","checkVal","room","min","max","count","getMinRoomCap","roomMax","roomMin","getMaxRoomCap","val","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport People from './components/People';\nclass App extends Component {\n  state =\n    {\n      peoples: [\n        {\n          id: 1,\n          name: 'Rooms',\n          currentCount: 1,\n          isDisabled: false\n        },\n        {\n          id: 2,\n          name: 'Adults',\n          currentCount: 0,\n          isDisabled: false\n        },\n        {\n          id: 3,\n          name: 'Childs',\n          currentCount: 0,\n          isDisabled: false\n        }]\n    };\n  decrementCounter = (id) => {\n    this.setState({\n      peoples: this.state.peoples.map((people) => {\n        var aCount = this.state.peoples[1].currentCount;\n        var cCount = this.state.peoples[2].currentCount;\n        var rCount = this.state.peoples[0].currentCount;\n        if (people.id === id) {\n          if (people.id === 1)// this is a room\n          {\n            if (people.currentCount > 1) {\n              people.currentCount -= 1;\n              if (this.state.peoples[2].currentCount > 0) {\n                var checkParam = aCount + cCount;\n                for (var i = cCount; i > 0; --i) {\n                  this.state.peoples[2].currentCount -= 1;\n                }\n              }\n              if (this.state.peoples[2].currentCount == 0 && this.state.peoples[1].currentCount > this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                console.log(this.state.peoples[1].currentCount);\n                this.state.peoples[1].currentCount -= this.getRoomCapacityOnDecreament(this.state.peoples[1].currentCount);\n              }\n            }\n          }\n          if (people.id === 2)// this is a adults\n          {\n            if (people.currentCount > 1) {\n              people.currentCount -= 1;\n              if (this.fallsInRange(people.currentCount) === false) {\n                console.log(this.fallsInRange(people.currentCount));\n                this.state.peoples[0].currentCount -= 1;\n              }\n            }\n          }\n          if (people.id === 3)// this is a child\n          {\n            if (people.currentCount >=0) {\n              people.currentCount -= 1;\n              if (this.fallsInRange(people.currentCount) === false) {\n                console.log(this.fallsInRange(people.currentCount));\n                this.state.peoples[0].currentCount -= 1;\n              }\n            }\n          }\n        }\n        return people;\n      })\n    });\n  };\n  increamentCounter = (id) => {\n    this.setState({\n      peoples: this.state.peoples.map((people) => {\n        var aCount = this.state.peoples[1].currentCount;\n        var cCount = this.state.peoples[2].currentCount;\n        var rCount = this.state.peoples[0].currentCount;\n        if (people.id === id) {\n          if (people.id === 1)// this is a room\n          {\n            if (people.currentCount < 5) {\n              people.currentCount += 1;\n            }\n          }\n          if (people.id === 2)// this is a adults\n          {\n            if (this.state.peoples[0].currentCount < 5) {\n              if (people.currentCount < 20) {\n                var ParamCheck = people.currentCount + cCount;\n                if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                  people.currentCount += 1;\n                  this.state.peoples[0].currentCount += 1;\n                }\n                else if ((people.currentCount <= this.checkVal(cCount))) {\n                  people.currentCount += 1;\n                }\n                else {\n                  people.currentCount += 1;\n                }\n              }\n            }\n          }\n          if (people.id === 3)// this is a child\n          {\n            if (this.state.peoples[0].currentCount < 5) {\n              if (people.currentCount < 20) {\n                var ParamCheck = people.currentCount + aCount;\n                if (ParamCheck >= this.checkRoomCapacity(this.state.peoples[0].currentCount)) {\n                  people.currentCount += 1;\n                  this.state.peoples[0].currentCount += 1;\n                }\n                else if ((people.currentCount <= this.checkVal(cCount))) {\n                  people.currentCount += 1;\n                }\n                else {\n                  people.currentCount += 1;\n                }\n              }\n            }\n          }\n        }\n        return people;\n      })\n    });\n  }\n  checkRoomCapacity(room) {\n    var min = 1;\n    var max = 4;\n    var count = max;\n    for (var i = min; i <= room; i++) {\n      count = 4;\n      count = count * i;\n    }\n    return count;\n  }\n  getMinRoomCap(room) {\n    var min = 1;\n    var max = 4;\n    var roomMax = max * room;\n    var roomMin = roomMax - max;\n    return roomMin;\n  }\n  getMaxRoomCap(room) {\n    var min = 1;\n    var max = 4;\n    var roomMax = max * room;\n    var roomMin = roomMax - max;\n    return roomMax;\n  }\n  getRoomCapacityOnDecreament(val) {\n    var room = this.state.peoples[0].currentCount;\n    if (this.checkRoomCapacity(room) < val) {\n      console.log(\"Decrement calc:\", val - this.checkRoomCapacity(room), val, room);\n      return (val - this.checkRoomCapacity(room));\n    }\n    else return val;\n  }\n  fallsInRange(val) {\n    //for(var i=0;i<this.state.peoples[0].currentCount;i++){\n    // var isRange = true;\n    console.log(this.getMinRoomCap(this.state.peoples[0].currentCount), this.getMaxRoomCap(this.state.peoples[0].currentCount));\n    if (this.getMinRoomCap(this.state.peoples[0].currentCount) <= val && this.getMaxRoomCap(this.state.peoples[0].currentCount) >= val) {\n      //  if(val<4){\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  //   if(val<=this.checkRoom(this.state.peoples[0].currentCount)){\n  //     console.log(val);\n  //     return true;\n  //   }\n  //  else{\n  //    return false;\n  //  }\n  // return isRange;\n  //}\n  checkVal(val) {\n    if (val === 1) {\n      return 4;\n    } else if (val === 2) {\n      return 3;\n    } else if (val === 3) {\n      return 2;\n    } else if (val === 4) {\n      return 1;\n    } else if (val === 0) {\n      return 4;\n    } else if (val >= 4) {\n      return 0;\n    }\n  };\n  render() {\n    return (\n      <div className='App'>\n        <div className='container'>\n          <People\n            peoples={this.state.peoples}\n            decrementCounter={this.decrementCounter}\n            increamentCounter={this.increamentCounter}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}